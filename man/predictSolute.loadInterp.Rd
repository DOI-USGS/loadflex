% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loadInterp.R
\name{predictSolute.loadInterp}
\alias{predictSolute.loadInterp}
\title{Make flux or concentration predictions from a loadInterp model.}
\usage{
\method{predictSolute}{loadInterp}(load.model, flux.or.conc = c("flux",
  "conc"), newdata, interval = c("none", "prediction"), level = 0.95,
  lin.or.log = c("linear", "log"), se.fit = FALSE, se.pred = FALSE,
  date = FALSE, count = FALSE, attach.units = FALSE,
  agg.by = c("unit", "day", "month", "water year", "calendar year",
  "total", "mean water year", "mean calendar year", "[custom]"),
  min.count = 0, ...)
}
\arguments{
\item{load.model}{A loadInterp object.}

\item{flux.or.conc}{character. Should the predictions be reported as flux
rates or concentrations? If the output is a data.frame, the column name for
flux predictions will be "fit" when `agg.by='unit'` and "Flux_Rate"
otherwise; the column name for concentration predictions will be "fit" when
`agg.by='unit'` and "Conc" otherwise.}

\item{newdata}{\code{data.frame}, optional. Predictor data. Because
loadInterp models interpolate in time among the observations to which they
have been "fitted", \code{newdata} is usually simply a one-column
data.frame of dates or date-times. Column names should match those given in
the \code{loadInterp} metadata. If \code{newdata} is not supplied, the
original fitting data will be used.}

\item{interval}{character set to "none" or "prediction". Prediction intervals
are unavailable when `agg.by=TRUE`, and confidence intervals are not
available for any loadInterp predictions. If "prediction", the interval
bounds will be returned in columns named "lwr" and "upr". Prediction bounds
describe the expected distribution of observations at each prediction
point.}

\item{level}{numeric. Fraction of density distribution to include within
confidence or prediction interval}

\item{lin.or.log}{character. Either "linear" or "log" to say whether the
predictions should be converted to log space or not. If converted to log
space, a bias correction will be applied to regression model predictions;
see \code{\link{linToLog}}.}

\item{se.fit}{logical set to FALSE because se.fit is not currently available
for loadInterp models.}

\item{se.pred}{logical. If TRUE, the output data.frame will include a column
named "se.pred" (for agg.by=="unit") or "SE" (for agg.by!="unit")
describing the standard error of the prediction for each row of predictors.
Only one of se.fit or se.pred is permitted for agg.by!="unit". The se.pred
values are standard errors of prediction (SEPs) and take into account not
only the parameter uncertainty associated with the model coefficients (also
covered by se.fit), but also the random error associated with any given
observation (the epsilon term in a typical regression model).}

\item{date}{logical. If TRUE, the output data.frame will include a column
named "date" containing the dates of the predictions (for agg.by=="unit"),
or a period description such as "Water_Year" if the predictions have been
aggregated (for agg.by!="unit").}

\item{count}{logical. If TRUE, and if agg.by!='unit', the output data.frame
will include, for most values of `agg.by`, a column named 'Count'
containing the number of unit predictions going into each aggregated
prediction (row). If `agg.by` is 'mean water year' or 'mean calendar year',
the columns included when `count=TRUE` are `Years_Record` (the number of
years for which annual values were potentially available) and
`Years_Complete` (the number of years considered complete and used to
compute the mean year).}

\item{attach.units}{logical. Should the units be attached to columns in the
resulting data.frame?}

\item{agg.by}{character Time period to aggregate results by. To do no
aggregation, use the default of `agg.by='unit'`.}

\item{min.count}{numeric number of observations below which an \code{agg.by}
value, e.g. a year, will be considered incomplete and be discarded}

\item{...}{Additional arguments passed to class-specific implementations of
the \code{predictSolute} generic function.}
}
\value{
Returns a vector or data.frame of predictions preditions. The result
  is a vector if interval is "none" and all of se.fit, se.pred, date, and
  count are FALSE; otherwise, the result is a data.frame.
}
\description{
Makes instantaneous predictions (at the temporal resolution of
\code{newdata}) from a fitted \code{\link{loadInterp}} model. See
\code{\link{predictSolute}} for details. For loadInterp models in particular,
}
\details{
loadInterps are currently assumed to have normally distributed residuals. An
unwitting user might violate this assumption without being notified by the
code, so be careful! This assumption is mainly relevant to the calculation of
prediction intervals. Also, where other models such as loadReg and loadLm
will retransform predictions back into linear space, loadInterps will not.
}
\seealso{
Other predictSolute: \code{\link{predictSolute.loadComp}},
  \code{\link{predictSolute.loadLm}},
  \code{\link{predictSolute.loadModel}},
  \code{\link{predictSolute.loadReg2}},
  \code{\link{predictSolute}}
}
\concept{predictSolute}
